{"version":3,"sources":["locales/en-US.js","locales/zh-CN.js","store/db/nedb.js","store sync /^/.*$","lib/intl/index.js","context/global.js","components/Home/index.js","components/Home/test.js","router/index.js","components/Home/loading.js","lib/tools/log.js","App.js","serviceWorker.js","index.js","store/db/index.js","store/index.js","lib/tools/index.js","store/db/session.js","components/Home/test.module.css","store/app.js","store/boom.js","store/user.js"],"names":["module","exports","fuck","world","normalTitle","clickMeToChangeTitle","titleByClick","hello","_nedb","Nedb","filename","nedb","Proxy","get","prop","params","Promise","res","rej","err","docs","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","locales","require","t","intl","bind","loadLocales","currentLocale","a","init","GlobalContext","React","createContext","Home","route","interval","state","width","height","fontSize","isLoading","minBoomTime","maxBoomTime","showLast","stopTimeChecker","clearInterval","timeChecker","context","store","boom","coolingTime","audio","dididi","pause","currentTime","play","window","navigator","vibrate","set","isCooling","startChecker","setInterval","setState","startBoom","restartBoom","handleBoomClick","randomTime","b","Math","floor","random","Number","minTime","maxTime","setBoomTime","type","value","target","handleCancelBoom","Audio","src","process","loop","document","title","this","body","clientWidth","clientHeight","style","display","alignItems","justifyContent","onClick","marginTop","onChange","Component","contextType","Test","click","user","switchLanguage","lang","changeLanguage","className","styles","red","blue","routes","path","component","render","to","Loading","background","position","size","tip","log","env","args","console","call","logj","JSON","stringify","App","language","app","forceUpdate","quickStore","actions","initStore","initLanguage","Store","Provider","renderRoutes","Boolean","location","hostname","match","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message","DB","loadDatabase","query","_id","findOne","result","data","update","upsert","remove","multi","db","deepModify","obj","newObj","key","undefined","Array","isArray","storeList","openSessionMode","createSessionId","load","storePath","normalStore","default","dbStore","drop","sessionStorage","getItem","Date","now","setItem","String","showClock","showAudio"],"mappings":"mHAAAA,EAAOC,QAAU,CACf,MAAS,QACT,MAAS,QACTC,KAAM,CACJC,MAAO,cAETC,YAAa,cACbC,qBAAsB,uBACtBC,aAAc,iB,kBCRhBN,EAAOC,QAAU,CACfM,MAAO,eACPJ,MAAO,eACPD,KAAM,CACJC,MAAO,sBAETC,YAAa,iCACbC,qBAAsB,uCACtBC,aAAc,yC,oDCRhB,mBAEIE,EAAQ,IAFZ,OAEgBC,GAAK,CACnBC,SAAU,OAGRC,EAAO,IAAIC,MAAMJ,EAAO,CAC1BK,IAD0B,SACtBL,EAAOM,GACT,OAAO,WAAqB,IAAD,uBAARC,EAAQ,yBAARA,EAAQ,gBACzB,OAAO,IAAIC,SAAQ,SAASC,EAAKC,GAC/BV,EAAMM,GAAN,MAAAN,EAAeO,EAAV,QAAkB,SAASI,EAAKC,GAC/BD,EACFD,EAAIC,GAEJF,EAAIG,cASDT,a,oBCvBf,IAAIU,EAAM,CACT,KAAM,GACN,QAAS,GACT,WAAY,GACZ,SAAU,GACV,YAAa,GACb,OAAQ,GACR,QAAS,GACT,aAAc,GACd,gBAAiB,GACjB,YAAa,GACb,eAAgB,GAChB,eAAgB,GAChB,kBAAmB,GACnB,UAAW,GACX,aAAc,GACd,SAAU,GACV,YAAa,IAId,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBzB,EAAOC,QAAUqB,EACjBA,EAAeE,GAAK,K,0LCpCdU,EAAU,CACd,QAASC,EAAQ,KACjB,QAASA,EAAQ,MAGNC,EAAIC,IAAKxB,IAAIyB,KAAKD,KAElBE,EAAW,uCAAG,WAAeC,GAAf,SAAAC,EAAA,sEACnBJ,IAAKK,KAAK,CACdF,gBACAN,YAHuB,2CAAH,sDAUxBK,EAFoB,SCfpB,IAEeI,EAFOC,IAAMC,gBCStBC,E,kDA4BJ,cAAsB,IAAD,EAARC,EAAQ,EAARA,MAAQ,4BACnB,gBA3BFC,SAAW,KA0BU,EAzBrBC,MAAQ,CACNC,MAAO,EACPC,OAAQ,EACRC,SAAU,EACVJ,SAAU,KACVK,WAAW,EACXC,YAAa,EACbC,YAAa,EACbC,UAAU,GAiBS,EAWrBC,gBAAkB,WAChBC,cAAc,EAAKT,MAAMD,WAZN,EAcrBW,YAAa,WACP,EAAKC,QAAQC,MAAMZ,MAAMa,KAAKC,aAAe,GAC/C,EAAKN,kBACL,EAAKO,MAAMC,OAAOC,QAClB,EAAKF,MAAMC,OAAOE,YAAc,EAChC,EAAKH,MAAMF,KAAKM,OAChBC,OAAOC,UAAUC,QAAQ,KACzB,EAAKX,QAAQC,MAAMW,IAAI,CACrBV,KAAM,CACJW,WAAW,MAIf,EAAKb,QAAQC,MAAMW,IAAI,CACrBV,KAAM,CACJC,YAAa,EAAKH,QAAQC,MAAMZ,MAAMa,KAAKC,YAAY,MA7B1C,EAkCrBW,aAAe,WACb,IAAIlD,EAAKmD,YAAY,EAAKhB,YAAa,KACvC,EAAKiB,SAAS,CACZ5B,SAAUxB,KArCO,EAwCrBqD,UAAY,WACV,EAAKH,eACL,EAAKV,MAAMC,OAAOG,QA1CC,EA4CrBU,YAAc,WACZ,EAAKD,YACL,EAAKD,SAAS,CACZpB,UAAU,KA/CO,EAkDrBuB,gBAAiB,WACf,EAAKH,SAAS,CACZvB,WAAW,IAEb,IAEI2B,EAxFO,SAASvC,GAAW,IAARwC,EAAO,uDAAHxC,EAC7B,OAAOyC,KAAKC,MAAMD,KAAKE,UAAYH,EAAIxC,EAAI,GAAKA,GAuF7B2C,CAFPC,OAAO,EAAKzB,QAAQC,MAAMZ,MAAMa,KAAKwB,SACrCD,OAAO,EAAKzB,QAAQC,MAAMZ,MAAMa,KAAKyB,UAE/C,EAAK3B,QAAQC,MAAMW,IAAI,CACrBV,KAAM,CACJC,YAAaiB,EACbP,WAAW,KAGf,EAAKI,aA/Dc,EAiErBW,YAAc,SAACC,EAAM7D,GACnB,IAAI8D,EAAQ9D,EAAE+D,OAAOD,MACR,QAATD,EACF,EAAK7B,QAAQC,MAAMW,IAAI,CACrBV,KAAM,CACJyB,QAASG,KAGK,QAATD,GACT,EAAK7B,QAAQC,MAAMW,IAAI,CACrBV,KAAM,CACJwB,QAASI,MA5EI,EAiFrBE,iBAAkB,WAChB,EAAKhC,QAAQC,MAAMW,IAAI,CACrBV,KAAM,CACJC,YAAa,EACbU,WAAW,KAGf,EAAKG,SAAS,CACZpB,UAAU,IAEZ,EAAKQ,MAAMC,OAAOC,QAClB,EAAKF,MAAMC,OAAOE,YAAc,EAChC,EAAKV,mBA3FL,EAAKV,MAAQA,EACb,EAAKiB,MAAQ,CACXC,OAAQ,IAAI4B,MACZ/B,KAAM,IAAI+B,OAEZ,EAAK7B,MAAMC,OAAO6B,IAAKC,qBACvB,EAAK/B,MAAMC,OAAO+B,MAAO,EACzB,EAAKhC,MAAMF,KAAKgC,IAAKC,mBATF,E,gEAdnBE,SAASC,MAAQ,2BACjBC,KAAKvB,SAAS,CACZ1B,MAAO+C,SAASG,KAAKC,YACrBlD,OAAQ8C,SAASG,KAAKE,aACtBlD,SAAU6C,SAASG,KAAKC,YAAY,IAGlCF,KAAKvC,QAAQC,MAAMZ,MAAMa,KAAKW,WAChC0B,KAAKvB,SAAS,CACZpB,UAAU,Q,8CAoGN,IAAD,OACP,OACE,yBAAK+C,MAAO,CACVrD,MAAOiD,KAAKlD,MAAMC,MAClBC,OAAQgD,KAAKlD,MAAME,OACnBC,SAAU+C,KAAKlD,MAAMG,SACrBoD,QAAS,OACTC,WAAY,SACZC,eAAgB,WAKdP,KAAKvC,QAAQC,MAAMZ,MAAMa,KAAKW,WAC9B,qEAGI0B,KAAKlD,MAAMO,UACX,8BACE,4BAAQmD,QAASR,KAAKrB,YAAayB,MAAO,CACxCK,UAAW,SADb,+CAOJ,4BAAQD,QAASR,KAAKP,iBAAkBW,MAAO,CAC7CK,UAAW,SADb,8BAQDT,KAAKvC,QAAQC,MAAMZ,MAAMa,KAAKW,WAC7B,6BACE,+DAEE,6BACA,2BAAO8B,MAAO,CACZrD,MAAOiD,KAAKlD,MAAMC,MAAQ,GAE5B2D,SAAU,SAACjF,GAAD,OAAO,EAAK4D,YAAY,MAAO5D,IAAI8D,MAAOS,KAAKvC,QAAQC,MAAMZ,MAAMa,KAAKwB,UANpF,IAUE,2BAAOiB,MAAO,CACZrD,MAAOiD,KAAKlD,MAAMC,MAAQ,GAE5B2D,SAAU,SAACjF,GAAD,OAAO,EAAK4D,YAAY,MAAO5D,IAAI8D,MAAOS,KAAKvC,QAAQC,MAAMZ,MAAMa,KAAKyB,UAbpF,UAkBA,4BAAQoB,QAASR,KAAKpB,gBAAiBwB,MAAO,CAC5CK,UAAW,SADb,kC,GAjLKE,aAAbhE,EACGiE,YAAcpE,EA4LRG,Q,mCClMTkE,E,kDAEJ,aAAe,IAAD,8BACZ,gBAEFC,MAAQ,WACN,EAAKrD,QAAQC,MAAMW,IAAI,CACrB0C,KAAM,CACJhB,MAAO9D,EAAE,oBAND,EAUd+E,eAAiB,SAACC,GAChB,EAAKxD,QAAQyD,eAAeD,IAXhB,E,qDAaJ,IAAD,OACP,OACE,6BACE,kBAAC,IAAD,CAAQT,QAAS,kBAAM,EAAKQ,eAAe,UAAUG,UAAWC,IAAOC,KAAvE,kCAGA,kBAAC,IAAD,CAAQb,QAAS,kBAAM,EAAKQ,eAAe,UAAUG,UAAWC,IAAOE,MAAvE,mBAGA,6BACA,6BACA,kBAAC,IAAD,CAAQd,QAASR,KAAKc,OACnB7E,EAAE,yBAEL,kBAAC,IAAD,KACGA,EAAE+D,KAAKvC,QAAQC,MAAMZ,MAAMiE,KAAKhB,a,GA9BxBY,aAAbE,EACGD,YAAcpE,EAoCRqE,ICzBAU,EAXA,CACb,CACEC,KAAM,QACNC,UAAW9E,GAEb,CACE6E,KAAM,IACNE,OAAQ,kBAAM,kBAAC,IAAD,CAAUC,GAAI,a,SCOjBC,E,uKAhBX,OACE,yBAAKxB,MAAO,CACVrD,MAAO,OACPC,OAAQ,OACR6E,WAAY,sBACZC,SAAU,WAEVzB,QAAS,OACTE,eAAgB,SAChBD,WAAY,WAEZ,kBAAC,IAAD,CAAMyB,KAAM,QAASC,IAAK,oB,GAbZrB,a,gBCHTsB,EAAM,WACjB,IAAIC,EAAMtC,aACV,GAAY,gBAARsC,EAAuB,KAAC,IAAD,qBAFEC,EAEF,yBAFEA,EAEF,iBACzB,EAAAC,QAAQH,KAAII,KAAZ,SAAiBD,SAAjB,OAA6BD,MAIpBG,EAAO,WAClB,IAAIJ,EAAMtC,aACV,GAAY,gBAARsC,EAAuB,CAAC,IAAD,uBAFGC,EAEH,yBAFGA,EAEH,gBACzBC,QAAQH,IAAII,KAAKD,QAASG,KAAKC,UAAUL,EAAM,KAAM,SAKvDjE,OAAO+D,IAAMA,EACb/D,OAAOoE,KAAOA,ECJhB,IAwEeG,E,kDApEb,aAAe,IAAD,8BACZ,gBAqCFvB,eAtCc,uCAsCG,WAAOwB,GAAP,SAAApG,EAAA,6DACf,EAAKQ,MAAMY,MAAMW,IAAI,CACnBsE,IAAK,CACHD,cAHW,SAMTtG,EAAYsG,GANH,OAOf,EAAKE,cAPU,2CAtCH,sDAEZ,EAAK9F,MAAQ,CACXI,WAAW,EACXQ,MAAO,IAET,EAAKmF,WAAa,GAElB,EAAKC,QAAU,CACb5B,eAAgB,EAAKA,gBAGvB,EAAK3E,OAZO,E,6KAeNyD,KAAK+C,Y,OACX/C,KAAKgD,eAELhD,KAAKvB,SAAS,CACZvB,WAAW,I,+PAKb+E,IAAI,wCACAvE,EAAQ,IAAIuF,UAAMjD,KA7BDJ,S,SA8BflC,EAAMnB,O,OACZ0F,IAAI,8CAEJjC,KAAKvB,SAAS,CACZf,MAAOA,IAETsC,KAAK6C,WAAa7C,KAAKlD,MAAMY,MAAMZ,M,2IAGnC,IAAI4F,EAAW1C,KAAK6C,WAAWF,IAAID,SACnC1C,KAAKkB,eAAewB,K,+BAYpB,OACE,kBAAC,EAAcQ,SAAf,CAAwB3D,MAAK,aAC3B7B,MAAOsC,KAAKlD,MAAMY,OACfsC,KAAK8C,UAGN9C,KAAKlD,MAAMI,UACR,kBAAC,EAAD,MACA,kBAAC,IAAD,KACC,yBAAKiE,UAAU,OACZgC,YAAa5B,U,GA3DZZ,aCHEyC,QACW,cAA7BlF,OAAOmF,SAASC,UAEe,UAA7BpF,OAAOmF,SAASC,UAEhBpF,OAAOmF,SAASC,SAASC,MACvB,2DCZNC,IAAS9B,OACP,kBAAC,EAAD,MACA5B,SAAS2D,eAAe,SD2HpB,kBAAmBtF,WACrBA,UAAUuF,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5B,QAAQ4B,MAAMA,EAAMC,a,gGEtItBC,E,WACJ,WAAY7I,GAAK,oBACf2E,KAAK3E,GAAKA,E,6KAIJb,UAAK2J,e,sPAIPC,EAAQ,CACVC,IAAKrE,KAAK3E,I,SAEOb,UAAK8J,QAAQF,G,cAA5BG,E,yBACGA,G,4KAGIC,G,uFACQhK,UAAKiK,OAAO,CAC7BJ,IAAKrE,KAAK3E,IADO,2BAGdmJ,GAHc,IAIjBH,IAAKrE,KAAK3E,KACT,CACDqJ,QAAQ,I,cANNH,E,yBAQGA,G,8PAID/J,UAAKmK,OAAO,GAAI,CAACC,OAAO,I,wGAInBV,a,2CC5BXW,E,6CCTSC,EAAa,SAAbA,EAAsBC,EAAKC,GACtC,IAAK,IAAIC,KAAOF,EAAK,CACnB,IAAIxF,EAAQyF,EAAOC,QACLC,IAAV3F,IACE4F,MAAMC,QAAQ7F,IAAUA,aAAiB1D,OAC3CkJ,EAAIE,GAAOH,EAAWC,EAAIE,GAAMD,EAAOC,IAEvCF,EAAIE,GAAOD,EAAOC,IAIxB,OAAOF,G,gBDPHM,EAAY,CAChB,OACA,MACA,QAIIpC,E,WACJ,WAAYN,EAAK2C,GAAkB,oBACjCtF,KAAKlD,MAAQ,GACbkD,KAAK3B,IAAM2B,KAAK3B,IAAIlC,KAAKwG,GAEzB,IAAItH,EAAK,QACe,SAApBiK,IACFjK,GAAMkK,6BAERV,EAAK,IAAIX,UAAG7I,G,2LAINwJ,EAAGW,O,OACTvD,IAAI,kC,cACkBoD,G,IAAtB,2BAASI,EAAwB,QAC3BC,EAAc1J,OAAQ,YAAKyJ,IAAaE,QAC5C3F,KAAKlD,MAAM2I,GAAaC,E,qCAG1BzD,IAAI,4B,SACgB4C,EAAGnK,M,cAAnBkL,E,UAEF3D,IAAI,sEACJ6C,EAAW9E,KAAKlD,MAAO8I,IAGzB3D,IAAI,uF,UACE4C,EAAGJ,OAAOzE,KAAKlD,O,0KAGbiI,G,iEACR/E,KAAKvB,SAAL,uCAAc,WAAO3B,GAAP,eAAAR,EAAA,6DACRoB,EAAQZ,EAAMY,MAAMZ,MACxBgI,EAAWpH,EAAOqH,GAFN,SAGNF,EAAGJ,OAAO/G,GAHJ,gCAMLA,GANK,2CAAd,kCAAAsC,KAAA,gB,+PAUM6E,EAAGgB,O,wGAIE5C,a,gCExDf,2DAEasC,EAAkB,WAC7B,IAAIlK,EAAKyK,eAAeC,QAHA,aAYxB,OARA9D,IAAI,4CAA6C6D,eAAeC,QAJxC,0BAKnB1K,IACHA,EAAK2K,KAAKC,MAAQlH,KAAKE,SACvBgD,IAAI,0BACJ6D,eAAeI,QARO,YAQoBC,OAAO9K,IACjD4G,IAAI,4CAA6C6D,eAAeC,QAT1C,2BAYjB1K,I,mBCZTxB,EAAOC,QAAU,CAAC,IAAM,kBAAkB,KAAO,qB,gCCDjD,OAAe,WACb4I,SAAU,U,gCCDZ,OAAe,WACbvD,QAAS,EACTC,QAAS,GACTd,WAAW,EACX8H,WAAW,EACXC,WAAW,EACXzI,YAAa,I,gCCNf,OAAe,WACbmC,MAAO,gB","file":"static/js/main.1ac70546.chunk.js","sourcesContent":["module.exports = {\r\n  'hello': 'hello',\r\n  'world': 'world',\r\n  fuck: {\r\n    world: 'fuck world',\r\n  },\r\n  normalTitle: 'normalTitle',\r\n  clickMeToChangeTitle: 'clickMeToChangeTitle',\r\n  titleByClick: 'titleByClick',\r\n}","module.exports = {\r\n  hello: '你好',\r\n  world: '世界',\r\n  fuck: {\r\n    world: '干世界',\r\n  },\r\n  normalTitle: '标题默认值',\r\n  clickMeToChangeTitle: '点我改变标题',\r\n  titleByClick: '点击后的标题',\r\n}","import Nedb from 'nedb'\r\n\r\nlet _nedb = new Nedb({\r\n  filename: 'db',\r\n})\r\n\r\nlet nedb = new Proxy(_nedb, {\r\n  get(_nedb, prop) {\r\n    return function(...params) {\r\n      return new Promise(function(res, rej) {\r\n        _nedb[prop](...params, function(err, docs) {\r\n          if (err) {\r\n            rej(err)\r\n          } else {\r\n            res(docs)\r\n          }\r\n        })\r\n      })\r\n    }\r\n  },\r\n})\r\n\r\n\r\nexport default nedb","var map = {\n\t\"./\": 26,\n\t\"./app\": 73,\n\t\"./app.js\": 73,\n\t\"./boom\": 74,\n\t\"./boom.js\": 74,\n\t\"./db\": 22,\n\t\"./db/\": 22,\n\t\"./db/index\": 22,\n\t\"./db/index.js\": 22,\n\t\"./db/nedb\": 18,\n\t\"./db/nedb.js\": 18,\n\t\"./db/session\": 34,\n\t\"./db/session.js\": 34,\n\t\"./index\": 26,\n\t\"./index.js\": 26,\n\t\"./user\": 75,\n\t\"./user.js\": 75\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 184;","import intl from 'react-intl-universal'\r\n\r\nconst locales = {\r\n  \"en-US\": require('../../locales/en-US.js'),\r\n  \"zh-CN\": require('../../locales/zh-CN.js'),\r\n}\r\n\r\nexport const t = intl.get.bind(intl)\r\n\r\nexport const loadLocales = async function(currentLocale) {\r\n  await intl.init({\r\n    currentLocale,\r\n    locales,\r\n  })\r\n}\r\n\r\n\r\nlet currentLocale = 'en-US'\r\n\r\nloadLocales(currentLocale)","import React from \"react\"\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nexport default GlobalContext","import React, { Component } from 'react'\r\nimport {Button} from 'antd'\r\nimport {HashRouter} from \"react-router-dom\"\r\nimport {t} from \"../../lib/intl\"\r\nimport {renderRoutes} from \"react-router-config\"\r\nimport GlobalContext from \"../../context/global\"\r\n\r\nconst random = function(a, b = a) {\r\n  return Math.floor(Math.random() * (b - a + 1) + a)\r\n}\r\n\r\nclass Home extends Component {\r\n  static contextType = GlobalContext\r\n  interval = null\r\n  state = {\r\n    width: 0,\r\n    height: 0,\r\n    fontSize: 0,\r\n    interval: null,\r\n    isLoading: false,\r\n    minBoomTime: 1,\r\n    maxBoomTime: 1,\r\n    showLast: false,\r\n  }\r\n  componentDidMount() {\r\n    document.title = '定时炸弹'\r\n    this.setState({\r\n      width: document.body.clientWidth,\r\n      height: document.body.clientHeight,\r\n      fontSize: document.body.clientWidth/8,\r\n    })\r\n\r\n    if (this.context.store.state.boom.isCooling) {\r\n      this.setState({\r\n        showLast: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  constructor({route}) {\r\n    super()\r\n    this.route = route\r\n    this.audio = {\r\n      dididi: new Audio(),\r\n      boom: new Audio(),\r\n    }\r\n    this.audio.dididi.src= process.env.PUBLIC_URL + '/audio/dididi.mp3'\r\n    this.audio.dididi.loop = true\r\n    this.audio.boom.src= process.env.PUBLIC_URL + '/audio/boom.mp3'\r\n  }\r\n  stopTimeChecker = () => {\r\n    clearInterval(this.state.interval)\r\n  }\r\n  timeChecker =() => {\r\n    if (this.context.store.state.boom.coolingTime <= 0) {\r\n      this.stopTimeChecker()\r\n      this.audio.dididi.pause()\r\n      this.audio.dididi.currentTime = 0\r\n      this.audio.boom.play()\r\n      window.navigator.vibrate(2000)\r\n      this.context.store.set({\r\n        boom: {\r\n          isCooling: false,\r\n        },\r\n      })\r\n    } else {\r\n      this.context.store.set({\r\n        boom: {\r\n          coolingTime: this.context.store.state.boom.coolingTime-1,\r\n        },\r\n      })\r\n    }\r\n  }\r\n  startChecker = () => {\r\n    let id = setInterval(this.timeChecker, 1000)\r\n    this.setState({\r\n      interval: id,\r\n    })\r\n  }\r\n  startBoom = () => {\r\n    this.startChecker()\r\n    this.audio.dididi.play()\r\n  }\r\n  restartBoom = () => {\r\n    this.startBoom()\r\n    this.setState({\r\n      showLast: false,\r\n    })\r\n  }\r\n  handleBoomClick =() => {\r\n    this.setState({\r\n      isLoading: true,\r\n    })\r\n    let min = Number(this.context.store.state.boom.minTime)\r\n    let max = Number(this.context.store.state.boom.maxTime)\r\n    let randomTime = random(min, max)\r\n    this.context.store.set({\r\n      boom: {\r\n        coolingTime: randomTime,\r\n        isCooling: true,\r\n      },\r\n    })\r\n    this.startBoom()\r\n  }\r\n  setBoomTime = (type, e) => {\r\n    let value = e.target.value\r\n    if (type === 'max') {\r\n      this.context.store.set({\r\n        boom: {\r\n          maxTime: value,\r\n        },\r\n      })\r\n    } else if (type === 'min') {\r\n      this.context.store.set({\r\n        boom: {\r\n          minTime: value,\r\n        },\r\n      })\r\n    }\r\n  }\r\n  handleCancelBoom =() => {\r\n    this.context.store.set({\r\n      boom: {\r\n        coolingTime: 0,\r\n        isCooling: false,\r\n      },\r\n    })\r\n    this.setState({\r\n      showLast: false,\r\n    })\r\n    this.audio.dididi.pause()\r\n    this.audio.dididi.currentTime = 0\r\n    this.stopTimeChecker()\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{\r\n        width: this.state.width,\r\n        height: this.state.height,\r\n        fontSize: this.state.fontSize,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}>\r\n\r\n\r\n        {\r\n          this.context.store.state.boom.isCooling &&\r\n          <span>\r\n            炸弹即将爆炸\r\n            {\r\n              this.state.showLast &&\r\n              <span>\r\n                <button onClick={this.restartBoom} style={{\r\n                  marginTop: \"20px\",\r\n                }}>\r\n                  继续上次的计时\r\n                </button>\r\n              </span>\r\n            }\r\n            <button onClick={this.handleCancelBoom} style={{\r\n              marginTop: \"20px\",\r\n            }}>\r\n              取消爆炸\r\n            </button>\r\n          </span>\r\n        }\r\n        {\r\n          !this.context.store.state.boom.isCooling &&\r\n            <div>\r\n              <span>\r\n                输入时间：\r\n                <br />\r\n                <input style={{\r\n                  width: this.state.width / 4,\r\n                }}\r\n                onChange={(e) => this.setBoomTime('min', e)} value={this.context.store.state.boom.minTime}\r\n                >\r\n                </input>\r\n                -\r\n                <input style={{\r\n                  width: this.state.width / 4,\r\n                }}\r\n                onChange={(e) => this.setBoomTime('max', e)} value={this.context.store.state.boom.maxTime}\r\n                >\r\n                </input>\r\n                秒\r\n              </span>\r\n              <button onClick={this.handleBoomClick} style={{\r\n                marginTop: \"20px\",\r\n              }}>\r\n                点燃炸弹\r\n              </button>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react'\r\nimport {Button} from 'antd'\r\nimport GlobalContext from \"../../context/global\"\r\nimport {t} from \"../../lib/intl\"\r\nimport styles from './test.module.css'\r\n\r\nclass Test extends Component {\r\n  static contextType = GlobalContext\r\n  constructor() {\r\n    super()\r\n  }\r\n  click = () => {\r\n    this.context.store.set({\r\n      user: {\r\n        title: t('titleByClick'),\r\n      },\r\n    })\r\n  }\r\n  switchLanguage = (lang) => {\r\n    this.context.changeLanguage(lang)\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button onClick={() => this.switchLanguage('zh-CN')} className={styles.red}>\r\n          切换到中文\r\n        </Button>\r\n        <Button onClick={() => this.switchLanguage('en-US')} className={styles.blue}>\r\n          changeToEnglist\r\n        </Button>\r\n        <br />\r\n        <br />\r\n        <Button onClick={this.click}>\r\n          {t('clickMeToChangeTitle')}\r\n        </Button>\r\n        <Button>\r\n          {t(this.context.store.state.user.title)}\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test","import React from \"react\"\r\nimport {Redirect} from \"react-router\"\r\n\r\nimport Home from '../components/Home'\r\nimport Login from '../components/Login'\r\nimport Test from \"../components/Home/test\"\r\n\r\nconst routes = [\r\n  {\r\n    path: '/home',\r\n    component: Home,\r\n  },\r\n  {\r\n    path: '/',\r\n    render: () => <Redirect to={\"/home\"} />,\r\n  },\r\n]\r\n\r\nexport default routes","import React, { Component } from 'react'\r\nimport {Spin} from 'antd'\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        background: 'rgba(0, 0, 0, 0.05)',\r\n        position: 'absolute',\r\n\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}>\r\n        <Spin size={\"large\"} tip={\"Loading...\"}></Spin>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Loading","export const log = function(...args) {\r\n  let env = process.env.NODE_ENV\r\n  if (env === 'development') {\r\n    console.log.call(console, ...args)\r\n  }\r\n}\r\n\r\nexport const logj = function(...args) {\r\n  let env = process.env.NODE_ENV\r\n  if (env === 'development') {\r\n    console.log.call(console, JSON.stringify(args, null, '  '))\r\n  }\r\n}\r\n\r\nexport const initLogToGlobal = function() {\r\n  window.log = log\r\n  window.logj = logj\r\n}","import React, {Component} from 'react'\nimport './App.css'\nimport { renderRoutes } from \"react-router-config\"\nimport routes from './router'\nimport Loading from './components/Home/loading'\nimport {HashRouter} from \"react-router-dom\"\nimport {t, loadLocales} from './lib/intl'\nimport Store from \"./store\"\nimport GlobalContext from './context/global'\nimport {initLogToGlobal} from \"./lib/tools/log\"\ninitLogToGlobal()\n\nconst USE_SESSION_MODE = process.env.REACT_APP_USE_SESSION_MODE\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      isLoading: true,\n      store: '',\n    }\n    this.quickStore = {}\n\n    this.actions = {\n      changeLanguage: this.changeLanguage,\n    }\n\n    this.init()\n  }\n  async init() {\n    await this.initStore()\n    this.initLanguage()\n\n    this.setState({\n      isLoading: false,\n    })\n\n  }\n  async initStore() {\n    log('初始化数据库')\n    let store = new Store(this, USE_SESSION_MODE)\n    await store.init()\n    log('数据库加载完成')\n\n    this.setState({\n      store: store,\n    })\n    this.quickStore = this.state.store.state\n  }\n  initLanguage() {\n    let language = this.quickStore.app.language\n    this.changeLanguage(language)\n  }\n  changeLanguage = async (language) => {\n    this.state.store.set({\n      app: {\n        language,\n      },\n    })\n    await loadLocales(language)\n    this.forceUpdate()\n  }\n  render() {\n    return (\n      <GlobalContext.Provider value={{\n        store: this.state.store,\n        ...this.actions,\n      }}>\n        {\n          this.state.isLoading\n            ?<Loading />\n            :<HashRouter>\n              <div className=\"App\">\n                {renderRoutes(routes)}\n              </div>\n            </HashRouter>\n        }\n      </GlobalContext.Provider>\n    )\n  }\n}\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import nedb from \"./nedb\"\r\n\r\n\r\nclass DB {\r\n  constructor(id) {\r\n    this.id = id\r\n  }\r\n\r\n  async load() {\r\n    await nedb.loadDatabase()\r\n  }\r\n\r\n  async get() {\r\n    let query = {\r\n      _id: this.id,\r\n    }\r\n    let result = await nedb.findOne(query)\r\n    return result\r\n  }\r\n\r\n  async update(data) {\r\n    let result = await nedb.update({\r\n      _id: this.id,\r\n    }, {\r\n      ...data,\r\n      _id: this.id,\r\n    }, {\r\n      upsert: true,\r\n    })\r\n    return result\r\n  }\r\n\r\n  async drop() {\r\n    await nedb.remove({}, {multi: true})\r\n  }\r\n}\r\n\r\nexport default DB","import {deepModify} from \"../lib/tools\"\r\nimport DB from \"./db\"\r\nimport {createSessionId} from \"./db/session\"\r\n\r\nconst storeList = [\r\n  'user',\r\n  'app',\r\n  'boom',\r\n]\r\nlet db\r\n\r\nclass Store {\r\n  constructor(app, openSessionMode) {\r\n    this.state = {}\r\n    this.set = this.set.bind(app)\r\n\r\n    let id = 'store'\r\n    if (openSessionMode === 'true') {\r\n      id += createSessionId()\r\n    }\r\n    db = new DB(id)\r\n  }\r\n\r\n  async init() {\r\n    await db.load()\r\n    log('加载默认值')\r\n    for (let storePath of storeList) {\r\n      let normalStore = require(`./${storePath}`).default\r\n      this.state[storePath] = normalStore\r\n    }\r\n\r\n    log(\"检查缓存\")\r\n    let dbStore = await db.get()\r\n    if (dbStore) {\r\n      log(\"存在缓存，调取缓存合并\")\r\n      deepModify(this.state, dbStore)\r\n    }\r\n\r\n    log('Store加载完毕，数据存进本地缓存')\r\n    await db.update(this.state)\r\n  }\r\n\r\n  async set(obj) {\r\n    this.setState(async (state) => {\r\n      let store = state.store.state\r\n      deepModify(store, obj)\r\n      await db.update(store)\r\n\r\n\r\n      return store\r\n    })\r\n  }\r\n  async clear() {\r\n    await db.drop()\r\n  }\r\n}\r\n\r\nexport default Store","export const deepModify = function(obj, newObj) {\r\n  for (let key in obj) {\r\n    let value = newObj[key]\r\n    if (value !== undefined) {\r\n      if (Array.isArray(value) || value instanceof Object) {\r\n        obj[key] = deepModify(obj[key], newObj[key])\r\n      } else {\r\n        obj[key] = newObj[key]\r\n      }\r\n    }\r\n  }\r\n  return obj\r\n}\r\n\r\n","\r\nconst sessionIdentifier = 'sessionId'\r\n\r\nexport const createSessionId = function() {\r\n  let id = sessionStorage.getItem(sessionIdentifier)\r\n  log('sessionStorage.getItem(sessionIdentifier)', sessionStorage.getItem(sessionIdentifier), sessionIdentifier)\r\n  if (!id) {\r\n    id = Date.now() + Math.random()\r\n    log('sessionStorage.setItem')\r\n    sessionStorage.setItem(sessionIdentifier, String(id))\r\n    log('sessionStorage.getItem(sessionIdentifier)', sessionStorage.getItem(sessionIdentifier), sessionIdentifier)\r\n  }\r\n\r\n  return id\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"test_red__1bm6M\",\"blue\":\"test_blue__xoWOS\"};","export default {\r\n  language: 'en-US',\r\n}","export default {\r\n  minTime: 1,\r\n  maxTime: '',\r\n  isCooling: false,\r\n  showClock: false,\r\n  showAudio: true,\r\n  coolingTime: 0,\r\n}","export default {\r\n  title: 'normalTitle',\r\n}"],"sourceRoot":""}